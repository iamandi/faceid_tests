{"ast":null,"code":"var _jsxFileName = \"/home/andy/andyGit/faceid_tests/src/components/upload.jsx\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { Layer, Rect, Stage, Group } from \"react-konva\";\nimport Konva from \"konva\";\nimport posed from \"react-pose\";\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      canvas: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    console.log({\n      canvas\n    });\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n    console.log({\n      img\n    });\n    this.setState({\n      canvas\n    });\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n      ctx.font = \"40px Courier\";\n      ctx.fillText(this.props.text, 210, 75);\n    };\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    console.log({\n      file\n    });\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = async () => {\n      //console.log({ file });\n      //console.log(`base64: ${reader.result}`);\n      console.log({\n        file\n      });\n      const base64 = reader.result.slice(\"data:image/jpeg;base64,\".length);\n      const instance = Axios.create({\n        baseURL: \"http://localhost:8080\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      });\n      const upload = await instance.post(\"/facebox/check\", {\n        base64\n      });\n      console.log(\"upload\", upload.data);\n      const _upload$data = upload.data,\n            facesCount = _upload$data.facesCount,\n            faces = _upload$data.faces;\n\n      if (facesCount > 0) {\n        faces.map(face => {\n          const _face$rect = face.rect,\n                top = _face$rect.top,\n                left = _face$rect.left,\n                width = _face$rect.width,\n                height = _face$rect.height;\n          console.log({\n            top,\n            left,\n            width,\n            height\n          }); //this.drawCircle(face.rect);\n\n          this.setState({\n            file: URL.createObjectURL(file),\n            top,\n            left,\n            width,\n            height\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: 640,\n      height: 425,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      ref: \"image\",\n      src: this.state.file,\n      alt: \"user\",\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/andy/andyGit/faceid_tests/src/components/upload.jsx"],"names":["React","Axios","Layer","Rect","Stage","Group","Konva","posed","Upload","Component","constructor","props","state","file","top","left","width","height","canvas","handleChange","bind","componentDidMount","refs","console","log","ctx","getContext","img","image","setState","onload","drawImage","font","fillText","text","e","preventDefault","target","files","reader","FileReader","readAsDataURL","onloadend","base64","result","slice","length","instance","create","baseURL","headers","upload","post","data","facesCount","faces","map","face","rect","URL","createObjectURL","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\nimport { Layer, Rect, Stage, Group } from \"react-konva\";\nimport Konva from \"konva\";\nimport posed from \"react-pose\";\n\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      canvas: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    console.log({ canvas });\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n\n    console.log({ img });\n\n    this.setState({ canvas });\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n      ctx.font = \"40px Courier\";\n      ctx.fillText(this.props.text, 210, 75);\n    };\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    console.log({ file });\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = async () => {\n      //console.log({ file });\n      //console.log(`base64: ${reader.result}`);\n      console.log({ file });\n\n      const base64 = reader.result.slice(\"data:image/jpeg;base64,\".length);\n      const instance = Axios.create({\n        baseURL: \"http://localhost:8080\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      });\n\n      const upload = await instance.post(\"/facebox/check\", { base64 });\n\n      console.log(\"upload\", upload.data);\n      const { facesCount, faces } = upload.data;\n      if (facesCount > 0) {\n        faces.map(face => {\n          const { top, left, width, height } = face.rect;\n          console.log({ top, left, width, height });\n          //this.drawCircle(face.rect);\n\n          this.setState({\n            file: URL.createObjectURL(file),\n            top,\n            left,\n            width,\n            height\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <input type='file' onChange={this.handleChange} />\n        <canvas ref='canvas' width={640} height={425} />\n        <img ref='image' src={this.state.file} alt='user' hidden />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}