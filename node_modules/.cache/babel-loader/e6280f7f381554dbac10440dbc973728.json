{"ast":null,"code":"var _jsxFileName = \"/home/andy/andyGit/faceid_tests/src/components/upload.jsx\";\nimport React from \"react\";\nimport Axios from \"axios\";\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = async () => {\n      //console.log({ file });\n      //console.log(`base64: ${reader.result}`);\n      this.setState({\n        file: URL.createObjectURL(file)\n      });\n      const base64 = reader.result.slice(\"data:image/jpeg;base64,\".length);\n      const instance = Axios.create({\n        baseURL: \"http://localhost:8080\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      });\n      const upload = await instance.post(\"/facebox/check\", {\n        base64\n      });\n      console.log(\"upload\", upload.data);\n      const _upload$data = upload.data,\n            facesCount = _upload$data.facesCount,\n            faces = _upload$data.faces;\n\n      if (facesCount > 0) {\n        faces.map(face => {\n          const _face$re = face.re,\n                top = _face$re.top,\n                left = _face$re.left,\n                width = _face$re.width,\n                height = _face$re.height;\n          console.log(face.rect);\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/andy/andyGit/faceid_tests/src/components/upload.jsx"],"names":["React","Axios","Upload","Component","constructor","props","state","file","handleChange","bind","e","preventDefault","target","files","reader","FileReader","readAsDataURL","onloadend","setState","URL","createObjectURL","base64","result","slice","length","instance","create","baseURL","headers","upload","post","console","log","data","facesCount","faces","map","face","re","top","left","width","height","rect","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIJ,IAAI,GAAGG,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBT,IAArB;;AACAO,IAAAA,MAAM,CAACG,SAAP,GAAmB,YAAY;AAC7B;AACA;AAEA,WAAKC,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAEY,GAAG,CAACC,eAAJ,CAAoBb,IAApB;AADM,OAAd;AAIA,YAAMc,MAAM,GAAGP,MAAM,CAACQ,MAAP,CAAcC,KAAd,CAAoB,0BAA0BC,MAA9C,CAAf;AACA,YAAMC,QAAQ,GAAGxB,KAAK,CAACyB,MAAN,CAAa;AAC5BC,QAAAA,OAAO,EAAE,uBADmB;AAE5BC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFmB,OAAb,CAAjB;AAOA,YAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,CAAc,gBAAd,EAAgC;AAAET,QAAAA;AAAF,OAAhC,CAArB;AAEAU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAM,CAACI,IAA7B;AAlB6B,2BAmBCJ,MAAM,CAACI,IAnBR;AAAA,YAmBrBC,UAnBqB,gBAmBrBA,UAnBqB;AAAA,YAmBTC,KAnBS,gBAmBTA,KAnBS;;AAoB7B,UAAID,UAAU,GAAG,CAAjB,EAAoB;AAClBC,QAAAA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AAAA,2BACmBA,IAAI,CAACC,EADxB;AAAA,gBACTC,GADS,YACTA,GADS;AAAA,gBACJC,IADI,YACJA,IADI;AAAA,gBACEC,KADF,YACEA,KADF;AAAA,gBACSC,MADT,YACSA,MADT;AAEhBX,UAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACM,IAAjB;AACD,SAHD;AAID;AACF,KA1BD;AA2BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKpC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAlDiD","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\n\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let file = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = async () => {\n      //console.log({ file });\n      //console.log(`base64: ${reader.result}`);\n\n      this.setState({\n        file: URL.createObjectURL(file)\n      });\n\n      const base64 = reader.result.slice(\"data:image/jpeg;base64,\".length);\n      const instance = Axios.create({\n        baseURL: \"http://localhost:8080\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      });\n\n      const upload = await instance.post(\"/facebox/check\", { base64 });\n\n      console.log(\"upload\", upload.data);\n      const { facesCount, faces } = upload.data;\n      if (facesCount > 0) {\n        faces.map(face => {\n          const {top, left, width, height} = face.re\n          console.log(face.rect);\n        });\n      }\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <input type='file' onChange={this.handleChange} />\n        <img src={this.state.file} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}